
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.result.DeleteResult;
import com.mongodb.client.result.UpdateResult;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alancontreras
 */
public class Aplicación extends javax.swing.JFrame {

    MongoDatabase basedatos; 
    MongoCollection<Document> coleccion; 
    DefaultTableModel tablin = new DefaultTableModel();
    String idGlobal = "";
    /**
     * Creates new form Aplicación
     */
    public Aplicación() {
        initComponents();
        
        try{
            basedatos = new ConexionAtlas(
                    new MongoClientURI("mongodb+srv://alanAdmin:alanmbc2012@cluster0.2wcu1.mongodb.net/ejemplo1?retryWrites=true&w=majority")
                    ).getDatabase("U4_P2");
            
            coleccion = basedatos.getCollection("Productos");
            
            tablin.addColumn("ID");
            tablin.addColumn("Descripcion");
            tablin.addColumn("Precio");
            tablin.addColumn("Existencia");
            
            jTable1.setModel(tablin);
            
            jButton4.setEnabled(false);
            cargarDatos();
        } catch(Exception e){
            mensaje(e.getMessage());
        }
    }
    
    
    private void mensaje(String m){
        showMessageDialog(null, m);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PRODUCTOS");

        jLabel2.setText("DESCRIPCIÓN");

        jLabel3.setText("PRECIO");

        jLabel4.setText("EXISTENCIA");

        jButton1.setText("INSERTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cargar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Actualizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(100, 100, 100)
                .addComponent(jButton4)
                .addGap(172, 172, 172))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(120, 120, 120))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(120, 120, 120)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(jButton1)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            Document insertar = new Document();

            insertar.put("nombre", jTextField1.getText());
            insertar.put("sueldo", Float.parseFloat(jTextField2.getText()));
            insertar.put("edad", Integer.parseInt(jTextField3.getText()));
            

            coleccion.insertOne(insertar);

            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");

            mensaje("Se insertó correctamente el registro.");

            cargarDatos();
        }catch(Exception e){
            mensaje(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (estaSeleccionada()==false) {
            mensaje("ERROR! \nDebes seleccionar una fila de la tabla para poder borrar");
            return;
        }

        int fila = jTable1.getSelectedRow();
        idGlobal = tablin.getValueAt(fila, 0).toString();
        int resp = showConfirmDialog(this, "¿Estás seguro que desas borrar ID: "+idGlobal+"?");

        if (resp == JOptionPane.OK_OPTION) {
            if (eliminar(idGlobal)==true) {
                mensaje("Se eliminó correctamente");
                cargarDatos();
            } else {
                mensaje("No se pudo eliminar el ID "+idGlobal);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (estaSeleccionada()==false) {
            mensaje("ERROR! \nDebes seleccionar una fila de la tabla para poder cargar");
            return;
        }

        int fila = jTable1.getSelectedRow();
        idGlobal = tablin.getValueAt(fila, 0).toString();

        jTextField1.setText(idGlobal = tablin.getValueAt(fila, 1).toString());
        jTextField2.setText(idGlobal = tablin.getValueAt(fila, 2).toString());
        jTextField3.setText(idGlobal = tablin.getValueAt(fila, 3).toString());

        jButton1.setEnabled(false);
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            if (idGlobal.isEmpty()) {
                mensaje("ID VACIO");
                return;
            }

            Document filtro = new Document("_id", new ObjectId(idGlobal));
            Document dataActualizar = new Document();

            dataActualizar.put("descripcion", jTextField1.getText());
            dataActualizar.put("precio", Float.parseFloat(jTextField2.getText()));
            dataActualizar.put("existencia", Integer.parseInt(jTextField3.getText()));
            

            UpdateResult resultado = coleccion.updateOne(filtro, new Document("$set", dataActualizar));
            if (resultado.getMatchedCount()==1 ) {
                mensaje("SE ACTUALIZÓ");
                cargarDatos();
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
            }else{
                mensaje("ERROR! \n No se pudo actualizar.");
            }

        }catch(Exception e){
            mensaje(e.getMessage());
        }

        jButton1.setEnabled(true);
        jButton4.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    
    public void cargarDatos(){
        try{
            MongoCursor<Document> documentos = coleccion.find().iterator();
            
            if (tablin.getRowCount() != 0) {
                    int total = tablin.getRowCount();
                    for (int i = 1; i <= total; i++) {
                        tablin.removeRow(0);
                }
            }
            
            while(documentos.hasNext()){
                String[] renglon = new String[5];
                
                
                
                ArrayList<Object> doc = new ArrayList(documentos.next().values());
                renglon[0] = doc.get(0).toString();
                renglon[1] = doc.get(1).toString();
                renglon[2] = doc.get(2).toString();
                renglon[3] = doc.get(3).toString();
                
                tablin.addRow(renglon);
            }
        }catch(Exception e){
            mensaje(e.getMessage());
        }
    }
    
    private boolean estaSeleccionada(){
        if (jTable1.getSelectedRow()>=0) {
            return true;
        }
        return false;

    }
    
     private boolean eliminar(String id){
        try{
            Document eliminar = new Document("_id", new ObjectId(id));
            
            DeleteResult resultado = coleccion.deleteOne(eliminar);
            if (resultado.getDeletedCount()==1) {
                return true;
            }else{
                return false;
            }
        }catch(Exception e){
            mensaje(e.getMessage());
        }
        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aplicación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aplicación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aplicación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aplicación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aplicación().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
